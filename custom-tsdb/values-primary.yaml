kubecostModel:
  containerStatsEnabled: true
  etlCloudAsset: false # set to true to enable kubecost to include out-of-cluster cloud resources  (uses more memory)
  promClusterIDLabel: YOUR_PROMETHEUS_CLUSTER_KEY # set this to the same as the key used for prometheus cluster labels
kubecostProductConfigs:
  clusterName: YOUR_PROMETHEUS_CLUSTER_VALUE # set this to the name of the primary cluster. ideally the same as the value that promClusterIDLabel would be
global:
  prometheus:
    enabled: false
    fqdn: http://prometheus-operator-kube-p-prometheus.monitoring:9090 # local prometheus endpoint
  thanos:
    queryService: http://thanos-query-frontend.thanosnamespace.svc:9090 # the location of the aggregated metrics. For thanos, thanos-query-frontend is recommended
# serviceMonitor: # if your prometheus supports serviceMonitors, set these to true. Otherwise see extraScrapeConfigs.yaml in this directory
#   enabled: true # note that you must also apply the network-costs-serviceMonitor.yaml if you enable this.
#   networkCosts: # this is waiting for a fix that is coming in kubecost 1.98. Until then, see the network-costs-serviceMonitor.yaml in this folder
#     enabled: true
networkCosts:
  enabled: true
  config:
    services:
      # set one the following to true based on our cloud provider:
      amazon-web-services: false
      google-cloud-services: false
      azure-cloud-services: false
grafana:
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: prometheus-kubecost
          type: prometheus
          url: http://thanos-query-frontend.thanosnamespace.svc:9090