
# Note that the most common support issue with Kubecost is due to misconfigured prometeheus.
# It is recommended to run Kubecost with default settings during proof-of-concepts
# Before disabling kubecost prometheus, you should have a multi-cluster metric aggregation strategy and it must include per-cluster labels.
# In addition to the settings below, each cluster must scrape the kubecost exporter (see extraScrapeConfigs.yaml). Negative idle costs are almost always a result of missing these metrics.
# Multi-cluster requires an enterprise subscription

global:
  prometheus:
    enabled: false # If false, Prometheus will not be installed -- only actively supported on paid Kubecost plans
    fqdn: http://your-thanos-query-frontend-http.yournamepace:10902 #example address of a prometheus to connect to. Include protocol (http:// or https://) Ignored if enabled: true
    # insecureSkipVerify : false # If true, kubecost will not check the TLS cert of prometheus
    # queryServiceBasicAuthSecretName: dbsecret # kubectl create secret generic dbsecret -n kubecost --from-file=USERNAME --from-file=PASSWORD
    # queryServiceBearerTokenSecretName: mcdbsecret  # kubectl create secret generic mcdbsecret -n kubecost --from-file=TOKEN
kubecostModel.promClusterIDLabel: cluster_id