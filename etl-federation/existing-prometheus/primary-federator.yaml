kubecostMetrics:
  # Guide: https://docs.kubecost.com/architecture/ksm-metrics#disabling-ksm-emission
  emitKsmV1Metrics: false # emit all KSM metrics in KSM v1 if true.
  emitKsmV1MetricsOnly: true # emit only the KSM metrics missing from KSM v2, this is required to be true.
kubecostProductConfigs:
  metricsConfigs:
    disabledMetrics: # drop additional metrics which are still emitted when "emitKsmV1MetricsOnly"
      - kube_node_status_capacity
      - kube_node_status_allocatable
      - kube_node_labels
      - kube_node_status_condition
      - kube_namespace_labels
      - kube_pod_labels
      - kube_pod_owner
  clusterName: CLUSTER_NAME
  # cloudIntegrationSecret: cloud-integration
federatedETL:
  useExistingS3Config: false
  primaryCluster: true
  federatedCluster: true
  federator:
    enabled: true
    primaryClusterID: CLUSTER_NAME
kubecostModel:
  containerStatsEnabled: true
  cloudCost:
    enabled: true # Set to true to enable CloudCost view that gives you visibility of your Cloud provider resources cost
  etlCloudAsset: false # Set etlCloudAsset to false when cloudCost.enabled=true
  federatedStorageConfigSecret: kubecost-object-store
serviceAccount: # this example uses AWS IRSA, which creates a service account with rights to the s3 bucket. If using keys+secrets in the federated-store, set create: true
  create: false
  name: kubecost-irsa-s3
prometheus:
  server:
    global:
      external_labels:
        # cluster_id should be unique for all clusters and the same value as .kubecostProductConfigs.clusterName
        # this must be set, even when prometheus is disabled.
        cluster_id: CLUSTER_NAME
global:
  grafana: # prometheus metrics will be local cluster only, disable grafana to save resources
    enabled: false
    proxy: false
  prometheus:
    enabled: false
    fqdn: http://prometheus-operator-prometheus.monitoring:9090 # local prometheus endpoint
  thanos: # this is "thanos" but any prometheus compatible service should work below
    queryService: http://thanos-query-frontend.thanosnamespace.svc:9090 # the location of the aggregated metrics. For thanos, thanos-query-frontend is recommended
# serviceMonitor: # if your prometheus supports serviceMonitors, set these to true. Otherwise see extraScrapeConfigs.yaml in this directory
#   enabled: true
#   additionalLabels:
#     label-key: label-value
#   networkCosts:
#     enabled: true
#     additionalLabels:
#       label-key: label-value
networkCosts:
  enabled: true
  config:
    services:
      # set one the following to true based on our cloud provider:
      amazon-web-services: false
      google-cloud-services: false
      azure-cloud-services: false